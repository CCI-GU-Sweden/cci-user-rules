name: Release & Publish

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  tag-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@1.75.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          TAG_PREFIX: v

      - name: Prepare site folder with this version
        if: steps.tag.outputs.new_tag != ''
        run: |
          TAG="${{ steps.tag.outputs.new_tag }}"
          echo "Publishing version $TAG"

          # Grab (or create) gh-pages worktree
          git clone --depth 1 --branch gh-pages \
            "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" site \
            || mkdir -p site

          # Force-enable Jekyll: remove .nojekyll if it exists
          rm -f site/.nojekyll

          mkdir -p "site/versions/${TAG}" site/latest

          # Create a Jekyll page for this tag (no layout => no theme required)
          {
            echo "---"
            echo "title: CCI User Rules ${TAG}"
            echo "---"
            cat CCI_User_Rules.md
          } > "site/versions/${TAG}/index.md"

          # Update 'latest' alias
          rm -rf site/latest/*
          cp "site/versions/${TAG}/index.md" site/latest/index.md

          # Minimal config (optional but nice)
          if [ ! -f site/_config.yml ]; then
            printf "title: CCI User Rules\n" > site/_config.yml
          fi

      - name: Deploy to gh-pages (Jekyll enabled)
        if: steps.tag.outputs.new_tag != ''
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: site
          enable_jekyll: true
