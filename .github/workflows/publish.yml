name: Release & Publish

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  tag-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@1.75.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          TAG_PREFIX: v

      - name: Build HTML for this tag (client-side Markdown)
        if: steps.tag.outputs.new_tag != ''
        run: |
          TAG="${{ steps.tag.outputs.new_tag }}"
          mkdir -p "site/versions/${TAG}" site/latest

          # 1) Version page: /versions/<tag>/index.html
          cat > "site/versions/${TAG}/index.html" <<'EOF'
          <!doctype html>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width,initial-scale=1">
          <title>CCI User Rules</title>
          <!-- Use the compiled CSS from the main site -->
          <link rel="stylesheet" href="https://cci-gu-sweden.github.io/assets/css/style.css">
          <div id="main_content_wrap" class="wrapper">
            <section id="main_content" class="inner">
              <h1 id="ver-title">CCI User Rules</h1>
              <div id="md-content"><em>Loading…</em></div>
            </section>
          </div>

          <script>
            (async function () {
              const parts = location.pathname.split('/').filter(Boolean);
              const tag = parts[parts.length - 1]; // .../versions/<TAG>/
              const mdUrl = `https://raw.githubusercontent.com/CCI-GU-Sweden/cci-user-rules/${tag}/CCI_User_Rules.md`;
              
              const resp = await fetch(mdUrl, { cache: 'no-store' });
              if (!resp.ok) {
                document.getElementById('md-content').textContent = `Failed to load ${mdUrl} (${resp.status})`;
                return;
              }
              const text = await resp.text();

              // Inject and render via Markdown-Tag (same tool you already use)
              document.getElementById('md-content').innerHTML = '<md>'+ text +'</md>';
              if (window.renderMarkdown) window.renderMarkdown();
              document.getElementById('ver-title').textContent = `CCI User Rules ${tag}`;
            })();
          </script>
          <script src="https://cdn.jsdelivr.net/gh/MarketingPipeline/Markdown-Tag/markdown-tag.js"></script>
          EOF

          # 2) Latest page: redirects to newest tag at runtime
          cat > site/latest/index.html <<'EOF'
          <!doctype html>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width,initial-scale=1">
          <title>CCI User Rules latest</title>
          <link rel="stylesheet" href="https://cci-gu-sweden.github.io/assets/css/style.css">
          <div id="main_content_wrap" class="wrapper">
            <section id="main_content" class="inner">
              <h1 id="ver-title">CCI User Rules</h1>
              <div id="md-content"><em>Loading…</em></div>
            </section>
          </div>
          
          <script>
            (async function () {
              try {
                const r = await fetch('https://api.github.com/repos/CCI-GU-Sweden/cci-user-rules/tags', {
                  headers: { 'Accept': 'application/vnd.github+json' },
                  cache: 'no-store'
                });
                const tags = await r.json();
                if (Array.isArray(tags) && tags.length) {
                  tags.sort((a,b)=> b.name.localeCompare(a.name, undefined, {numeric:true, sensitivity:'base'}));
                  location.replace(`../versions/${tags[0].name}/`);
                } else {
                  document.body.insertAdjacentHTML('beforeend','<p>No tags found.</p>');
                }
              } catch (e) {
                document.body.insertAdjacentHTML('beforeend','<p>Could not determine latest version.</p>');
                console.warn(e);
              }
            })();
          </script>
          EOF

          # Optional root redirect to /latest/
          cat > site/index.html <<'EOF'
          <!doctype html>
          <meta http-equiv="refresh" content="0;url=./latest/">
          <title>CCI User Rules</title>
          <a href="./latest/">Go to latest</a>
          EOF


      - name: Deploy to gh-pages
        if: steps.tag.outputs.new_tag != ''
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: site
